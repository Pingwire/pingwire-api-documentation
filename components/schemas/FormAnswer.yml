type: object
required:
- entity
- formId
properties:
  entity:
    type: object
    description: Entity that submitted the form answers
    required:
    - id
    - type
    properties:
      id:
        type: string
        format: ObjectId
        example: 620a2958bfc1d7a803398a6d
        description: Id of the entity
      type:
        type: string
        description: Type of the entity
        enum:
          - Individual
          - Business
          - Account
          - Product
  formId:
    type: string
    format: ObjectId
    example: 620a2958bfc1d7a803398a6d
    description: Form that was used to submit the answers
  activities:
    type: string
    description: Description of the business activities
  address:
    type: string
    description: Street address of the entity
  nationalIdentifier:
    type: array
    description: National identifier
    items:
      $ref: '#/components/schemas/NationalIdentifier'
  alternativeBeneficialOwners:
    type: array
    description: Alternative beneficial owners of the business. This should be used when there is no beneficial owner for this business.
    items:
      allOf:
        - $ref: '#/components/schemas/RelatedEntity'
        - $ref: '#/components/schemas/RelatedEntityRole'
  beneficialOwner:
    type: string
    description: Whether the business has beneficial owners. If yes should use the "beneficialOwners" field otherwise the "alternativeBeneficialOwners" field.
    enum:
    - yes
    - no
  beneficialOwners:
    type: array
    description: Beneficial owners of the business. This should be used when there are official beneficial owners for this business.
    items:
      allOf:
        - $ref: '#/components/schemas/RelatedEntity'
        - type: object
          required:
          - controlType
          - familyControl
          properties:
            controlType:
              description: Information about the control exercised on the business by the related individual
              oneOf:
                - $ref: '#/components/schemas/DirectControlTypes'
                - $ref: '#/components/schemas/IndirectControlTypes'
            familyControl:
              type: string
              description: Whether the related individual exercise control together with close family members
              enum:
              - yes
              - no
  citizenship:
    type: array
    description: Citizenship countries of the individual
    items:
      type: object
      properties:
        country:
          type: string
          format: ISO 3166 ALPHA-3
          description: Country of citizenship in alpha-3 iso format
          example: SWE
        connections:
          type: array
          items:
            type: string
            description: Type of connection to the country of citizenship
            enum:
            - noConnection
            - stayingMoreThan180Days
            - haveInvestmentsOrBusiness
            - nationallyRegistered
            - moneyTransfers
  city:
    type: string
    description: City of the individual
  companyName:
    type: string
    description: Name of the business
  custom:
    type: object
    description: Answers to custom questions that are not officially supported. This is a hashmap with question identifiers as keys and free text answers as values.
    additionalProperties:
      x-additionalPropertiesName: questionIdentifier
      type: string
      description: Free text answer to the custom question.
  dateOfBirth:
    type: string
    format: date-time
    description: Date of birth of the individual
  email:
    type: string
    format: email
    description: Contact email of the business or individual
  employmentStatus:
    type: string
    description: Employment status of the individual
    enum:
    - fullTime
    - partTime
    - student
    - unemployed
    - retired
  expectedTransactionBehaviour:
    type: array
    description: |
      Expected transaction behaviour according to the business or individual. This is an array with one item per combination of currency and transaction type configuration.
    items:
      type: object
      required:
      - currency
      properties:
        currency:
          type: string
          description: Currency for the expected behaviour in the 3 letters format from ISO 4217
        transactionTypeConfiguration:
          type: object
          description: Transaction types to be included in the expected behaviour. If that field is omitted then all types are included in the behaviour.
          required:
          - or
          properties:
            or:
              type: array
              description: List of the "OR" conditions.
              items:
                type: object
                required:
                - and
                properties:
                  and:
                    type: array
                    description: List of the "AND" conditions for that "OR" block.
                    items:
                      type: object
                      required:
                      - inclusion
                      - transactionTypeId
                      properties:
                        inclusion:
                          description: describe if the transaction type should be included or excluded. "excluded" will use the transaction type with a "NOT" condition.
                          type: string
                          enum:
                          - included
                          - excluded
                        transactionTypeId:
                          type: string
                          description: ID of the transaction type to consider
                          format: ObjectId
                          example: 620a2958bfc1d7a803398a6d
        incoming:
          allOf:
          - type: object
            description: Expected transaction behaviour for incoming transactions in that currency and transaction type configuration.
          - $ref: '#/components/schemas/ExpectedTransactionBehaviour'
        outgoing:
          allOf:
          - type: object
            description: Expected transaction behaviour for outgoing transactions in that currency and transaction type configuration.
          - $ref: '#/components/schemas/ExpectedTransactionBehaviour'
        process:
          allOf:
          - type: object
            description: Expected transaction behaviour for processed transactions in that currency and transaction type configuration.
          - $ref: '#/components/schemas/ExpectedTransactionBehaviour'
        total:
          allOf:
          - type: object
            description: Expected transaction behaviour for all transactions in that currency and transaction type configuration.
          - $ref: '#/components/schemas/ExpectedTransactionBehaviour'
  firstName:
    type: string
    description: First name of the individual
  forecastedTurnover:
    type: object
    description: Forecasted turnover for the current year
    required:
    - value
    - currency
    properties:
      value:
        type: number
        description: Amount
      currency:
        type: currency
        description: Currency in the 3 letters format from ISO 4217
        example: USD
  industry:
    type: string
    description: Industry of the business
    enum:
    - agricultureForestryFishing
    - miningQuarrying
    - manufacturing
    - electricityGasSteamAirConditioningSupply
    - waterSupplySewerageWasteManagementRemediationActivities
    - construction
    - wholesaleRetailTradeRepairMotorVehiclesMotorcycles
    - transportationStorage
    - accommodationFoodServiceActivities
    - informationCommunication
    - financialInsuranceActivities
    - realEstateActivities
    - professionalScientificTechnicalActivities
    - administrativeSupportServiceActivities
    - publicAdministrationDefenceCompulsorySocialSecurity
    - education
    - humanHealthSocialWorkActivities
    - artsEntertainmentRecreation
    - otherServiceActivities
    - activitiesHouseholdsEmployersUndifferentiatedGoodsServicesProducingActivitiesHouseholdsOwnUse
    - activitiesExtraterritorialOrganisationsBodies
  isFinancialInstitution:
    type: string
    description: Whether the business is a financial institution
    enum:
    - yes
    - no
  lastName:
    type: string
    description: Last name of the individual
  legalForm:
    type: object
    description: Information about the legal form of the business
    required:
    - options
    properties:
      options:
        type: string
        description: Type of the legal form of the business
        enum:
        - limited-liability-company
        - economic-association
        - sole-proprietorship
        - branch
        - general-partnership
        - non-profit-making-association
        - limited-partnership
        - foundation
        - foreign-company
        - other
        - unknown
      other:
        type: string
        description: Description of the legal form of the business. Only used if "options" is "other"
  listedFinancialMarket:
    type: object
    description: Information about the financial market where the business is listed
    required:
    - option
    properties:
      option:
        type: string
        description: Whether the business is listed on a financial market
        enum:
        - yes
        - no
      market:
        type: string
        description: The financial market where the business is listed. Only used if "option" is "yes".
  operationStartDate:
    type: string
    format: date-time
    description: The date the operations of the business started.
  organizationNumber:
    type: object
    description: Information about the registration number and country of the business.
    required:
    - country
    - registrationNumber
    properties:
      country:
        type: string
        format: ISO 3166 ALPHA-3
        description: Country of registration in alpha-3 iso format
        example: SWE
      registrationNumber:
        type: string
        description: The registration number. The format depends of the country chosen.
  ownerStructure:
    type: string
    description: Free text description of the ownership structure of the business
  pep:
    allOf:
    - $ref: '#/components/schemas/Pep'
    - type: object
      required:
      - isPep
  phoneNumber:
    type: string
    description: The phone number of the individual in the 164 phone number format
  postalCode:
    type: string
    description: The postal code of the individual
  previousTurnover:
    type: object
    description: Turnover of the business for the previous year
    required:
    - value
    - currency
    properties:
      value:
        type: number
        description: Amount
      currency:
        type: currency
        description: Currency in the 3 letters format from ISO 4217
        example: USD
  products:
    type: object
    description: Products used by the individual or the business.
    required:
    - options
    properties:
      options:
        type: array
        description: List of the products. There is no format validation but it is recommended to use product codes or similar so that it can easily be used programmatically.
        items:
          type: string
      other:
        type: string
        description: Free text description of the product. Only used when one of the "options" is "other".
  purpose:
    type: object
    description: Purposes for using the products or services offered.
    required:
    - options
    properties:
      options:
        type: array
        description: List of the purposes. There is no format validation but it is recommended to use purpose codes or similar so that it can easily be used programmatically.
        items:
          type: string
      other:
        type: string
        description: Free text description of the purpose. Only used when one of the "options" is "other".
  residence:
    type: array
    description: Countries of residence of the individual or business
    items:
      type: string
      format: ISO 3166 ALPHA-3
      example: SWE
  salary:
    type: object
    description: Monthly gross salary of the individual
    required:
    - value
    - currency
    properties:
      value:
        type: number
        description: Amount
      currency:
        type: currency
        description: Currency in the 3 letters format from ISO 4217
        example: USD
  signatories:
    type: array
    description: Signatories of the business
    items:
      allOf:
        - $ref: '#/components/schemas/RelatedEntity'
        - $ref: '#/components/schemas/RelatedEntityRole'
  signer:
    type: object
    description: Information about the person who signed and submitted the form answers
    properties:
      nationalIdentifier:
        type: array
        description: National identifier of the signer
        items:
          $ref: '#/components/schemas/NationalIdentifier'
      firstName:
        type: string
        description: First name of the signer
      lastName:
        type: string
        description: Last name of the signer
      role:
        type: string
        description: Role of the signer in the business
      email:
        type: string
        format: email
        description: Email address of the signer
      phoneNumber:
        type: string
        description: The phone number of the signer in the 164 phone number format
      confirm:
        type: string
        description: Whether the signer has confirmed the answers submitted were correct to the best of their knowledge.
        enum:
        - yes
        - no
  sourceOfFunds:
    type: object
    description: Information about the source of funds
    required:
    - options
    properties:
      options:
        type: array
        description: Type of the source of funds
        items:
          $ref: '#/components/schemas/SourceOfFunds'
      other:
        type: string
        description: Description of the source of funds. Only used if one of the "options" is "other"
  sourceOfWealth:
    type: object
    description: Information about the source of wealth
    required:
    - options
    properties:
      options:
        type: array
        description: Type of the source of wealth
        items:
          $ref: '#/components/schemas/SourceOfFunds'
      other:
        type: string
        description: Description of the source of wealth. Only used if one of the "options" is "other"
  sourceOfWealthAmount:
    type: object
    description: Monthly income from the selected source of wealth
    required:
    - value
    - currency
    properties:
      value:
        type: number
        description: Amount
      currency:
        type: currency
        description: Currency in the 3 letters format from ISO 4217
        example: USD
  stateOwned:
    type: string
    description: Whether the business is state owned
    enum:
    - yes
    - no
  taxResidency:
    type: array
    description: Countries of tax residency of the individual or business
    items:
      type: string
      format: ISO 3166 ALPHA-3
      example: SWE
  tin:
    type: string
    description: Tax identification number
  txMonitoringThresholds:
    type: object
    deprecated: true
    description: |
      Deprecated. Use expectedTransactionBehaviour instead.

      Expected transactional behaviour according to the business or individual. This is a two dimensional hashmap indexed on currency and country. The currency is in the 3 letters format from ISO 4217 and the country in the ISO 3166 ALPHA-3 format.
    additionalProperties:
      x-additionalPropertiesName: currency
      description: Expected transactional behaviour in that specific currency according to the business or individual. Currency is in the 3 letters format from ISO 4217.
      type: object
      additionalProperties:
        x-additionalPropertiesName: country
        description: Expected transaction behaviour in that specific country (and in the parent currency) according to the business or individual. Country is in the ISO 3166 ALPHA-3 format.
        type: object
        properties:
          incoming:
            allOf:
              - $ref: '#/components/schemas/TransactionPattern'
              - type: object
                description: Expected transaction behaviour for incoming transactions in that country and currency.
          outgoing:
            allOf:
              - $ref: '#/components/schemas/TransactionPattern'
              - type: object
                description: Expected transaction behaviour for outgoing transactions in that country and currency.
          process:
            allOf:
              - $ref: '#/components/schemas/TransactionPattern'
              - type: object
                description: Expected transaction behaviour for processed transactions in that country and currency.
          total:
            allOf:
              - $ref: '#/components/schemas/TransactionPattern'
              - type: object
                description: Expected transaction behaviour for transactions in all directions (incoming, outgoing and processed) in that country and currency.
  website:
    type: string
    description: Website of the business

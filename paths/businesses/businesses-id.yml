get: 
  tags:
    - Businesses
  summary: Business
  description: Receive business by id saved in the database.
  parameters:
  - in: path
    name: id
    description: Business object id
    example: 620a2958bfc1d7a803398a6d
    required: true
    schema:
      type: string
      format: ObjectId
  responses:
    200:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BusinessResponse"
    400:
      description: Invalid parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidBody"
    500:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBody"
  security:
  - bearerAuth: []
put:
  tags:
  - Businesses
  summary: Update businesses
  parameters:
  - in: path
    name: id
    description: Business object id
    example: 620a2958bfc1d7a803398a6d
    required: true
    schema:
      type: string
      format: ObjectId
  description: Update a businesses.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
          - customId
          properties:
            customId:
              type: string
              description: The custom id can be any id that the creator would like to identify the business with.
              externalDocs:
                description: Unique identifier
                url: '/#section/Introduction/Unique-Identifier'
            name:
              type: string
            swedishOrganizationNumber:
              deprecated: true 
              type: string
              format: xxxxxxxxxx
              example: xxxxxxxxxx
              externalDocs:
                description: Unique identifier
                url: '/#section/Introduction/Unique-Identifier'
              registrationNumber:
                  type: string
                  externalDocs:
                    description: Unique identifier (in combination with residence)
                    url: '/#section/Introduction/Unique-Identifier'
              residence:
                  type: string
                  format: ISO 3166 ALPHA-3
            incorporationLegalForm:
              type: string
              description: Type of business.
              enum:
              - limited-liability-company
              - economic-association
              - sole-proprietorship
              - branch
              - general-partnership
              - non-profit-making-association
              - limited-partnership
              - foundation
              - foreign-company
              - other
              - unknown
            email:
              type: string
            phoneNumber:
              type: string
            status:
              type: string
              enum:
              - Available
              - Blocked
              
  responses:
    200:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BusinessResponse"
    400:
      description: Invalid parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidBody"
    500:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBody"
  security:
  - bearerAuth: []
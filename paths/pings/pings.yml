get: 
  tags:
    - Pings
  summary: List pings
  description: Receive list of pings saved in the database.
  parameters:
  - in: query
    name: _sort
    required: false
    example: 'id'
    schema:
      type: string
      enum:
      - id
      - createdAt
      - description
      - entities
  - in: query
    name: _order
    description: Order of list (DESC or ASC) based on the sorting parameter.
    required: false
    example: 
    schema:
      type: string
      enum:
      - DESC
      - ASC
  - in: query
    name: status
    description: Filter list of pings by status.
    required: false
    example: 
    schema:
      type: string
      enum: 
      - pending
      - resolved 
      - confirmed 
      - ignored 
  - in: query
    name: _start
    description: The start number of the pings list.
    required: false
    example: '0'
    schema:
      type: number
  - in: query
    name: _end
    description: The end number of the pings list.
    required: false
    example: '10'
    schema:
      type: number
  responses:
    200:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Ping"
    400:
      description: Invalid parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidBody"
    500:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBody"
  security:
  - bearerAuth: []
post:
  tags:
  - Pings
  summary: Create pings
  description: Create a new pings.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
          - entities
          - description
          - score
          properties:
                entities:
                  type: array
                  description: List of entities.
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: ObjectId
                        example: 62b9437318fe4517089b2833
                        externalDocs:
                          description: Unique identifier
                          url: '/#section/Introduction/Unique-Identifier'
                      type:
                        type: string
                        enum:
                        - Individual
                        - Business
                        - Car
                description:
                  type: string
                score:
                  type: number
                  min: 0
                  max: 100
  responses:
    200:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Ping"
    400:
      description: Invalid parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidBody"
    500:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBody"
  security:
  - bearerAuth: []
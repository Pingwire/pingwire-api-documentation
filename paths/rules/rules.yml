get:
  tags:
    - Rules
  summary: List rules
  operationId: listRules
  description: Receive list of rules saved in the database.
  parameters:
  - in: query
    name: _sort
    required: false
    example: 'id'
    schema:
      type: string
      enum:
      - id
      - createdAt
      - name
  - in: query
    name: _order
    description: Order of list (DESC or ASC) based on the sorting parameter.
    required: false
    example:
    schema:
      type: string
      enum:
      - DESC
      - ASC
  - in: query
    name: triggeredBy
    description: Filter list of rules by triggeredBy.
    required: false
    schema:
      type: string
      format: ObjectId
      description: ObjectId or none
  - in: query
    name: segments
    description: Filter list of rules by list of segments.
    required: false
    schema:
      type: array
      items:
        type: string
        format: ObjectId
        description: ObjectId
  - in: query
    name: requestTypes
    description: Filter list of rules by list of request types.
    required: false
    schema:
      type: array
      items:
        type: string
        enum:
        - transaction
        - carKyc
        - carPurchase
        - individualKyc
        - businessKyc
  - in: query
    name: _start
    description: The start number of the rules list.
    required: false
    example: '0'
    schema:
      type: number
  - in: query
    name: _end
    description: The end number of the rules list.
    required: false
    example: '10'
    schema:
      type: number
  responses:
    200:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Rule'
    400:
      description: Invalid parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidBody"
    500:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBody"
  security:
  - bearerAuth: []
post:
  tags:
  - Rules
  summary: Create rule
  operationId: createRule
  description: Create a new rule.
  requestBody:
    content:
      application/json:
        schema:
          $ref: "#/components/schemas/RuleBody"
  responses:
    200:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Rule"
    400:
      description: Invalid parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidBody"
    500:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBody"
  security:
  - bearerAuth: []

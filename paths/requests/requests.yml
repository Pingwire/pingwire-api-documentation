get:
  tags:
    - Requests
  summary: List requests
  operationId: listRequest
  description: Receive list of requests saved in the database.
  parameters:
  - in: query
    name: _sort
    required: false
    example: 'id'
    schema:
      type: string
      enum:
      - id
      - createdAt
      - entity
      - requestType
  - in: query
    name: _order
    description: Order of list (DESC or ASC) based on the sorting parameter.
    required: false
    example:
    schema:
      type: string
      enum:
      - DESC
      - ASC
  - in: query
    name: recommendation
    description: Filter list of requests by recommendation.
    required: false
    example:
    schema:
      type: string
      enum:
      - block
      - review
      - proceed
  - in: query
    name: id
    description: Filter list of requests by id of request. Either this query parameter or requestType query parameter must be defined.
    required: false
    example: 679b5a44b82f37f3cf378ea5
    schema:
      type: string
      format: ObjectId
  - in: query
    name: requestType
    description: Filter list of requests by requestType. Either this query parameter or the id query paramter must be defined.
    required: false
    example: transaction
    schema:
      type: string
      enum:
        - transaction
        - carKyc
        - carPurchase
        - individualKyc
        - businessKyc
  - in: query
    name: _start
    description: The start number of the requests list.
    required: false
    example: '0'
    schema:
      type: number
  - in: query
    name: _end
    description: The end number of the requests list.
    required: false
    example: '10'
    schema:
      type: number
  responses:
    200:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Request'
    400:
      description: Invalid parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidBody"
    500:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBody"
  security:
  - bearerAuth: []
post:
  tags:
  - Requests
  summary: Create request
  operationId: createRequest
  description: Create a new request.
  requestBody:
    content:
      application/json:
        schema:
          $ref: "#/components/schemas/RequestBody"
  responses:
    201:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Request"
    400:
      description: Invalid parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidBody"
    500:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorBody"
  security:
  - bearerAuth: []

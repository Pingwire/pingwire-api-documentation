openapi: 3.0.0
info:
  title: Pingwire API
  version: 1.0.0
  description: |
    The Pingwire API can be used by companies in active collaboration with Pingwire AB.

  x-logo:
    url: './assets/pingwire-green.png'
    altText: Pingwire
servers:
- url: https://api.pingwire.io/
  description: Production server
  variables:
    brokerName:
      default: generic
      description: Same as the basic auth username
- url: https:/api.pingwire.io/
  description: Staging server
  variables:
    brokerName:
      default: generic
      description: Same as the basic auth username
x-tagGroups:
  - name: Entities
    tags:
      - Individuals
      - Businesses
paths:
  /individuals/: 
    get: 
      tags:
        - Individuals
      summary: List inviduals
      description: Recive list of indiviuduals saved in the database.
      parameters:
      - in: query
        name: _sort
        required: false
        example: 'id'
        schema:
          type: string
          enum:
          - id
          - firstName
          - lastName
          - swedishSocialSecurityNumber
          - riskScore
      - in: query
        name: _order
        description: Order of list (DESC or ASC) based on the sorting parameter.
        required: false
        example: 
        schema:
          type: string
          enum:
          - DESC
          - ASC
      - in: query
        name: _start
        description: The start number of the individuals list.
        required: false
        example: '0'
        schema:
          type: number
      - in: query
        name: _end
        description: The end number of the individuals list.
        required: false
        example: '10'
        schema:
          type: number
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/individual"
        400:
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidBody"
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorBody"
      security:
      - basic_auth: []
    post:
      tags:
      - Individuals
      summary: Create individual
      description: Create a new individual.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - customId
              properties:
                    customId:
                      type: string
                      description: The custom id can be any id that the creater would like to identify the individual with.
                    firstName:
                      type: string
                    lastName:
                      type: string
                    swedishSocialSecurityNumber:
                      type: string
                      format: YYYYMMDDXXXX
                
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/individual"
        400:
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidBody"
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorBody"
      security:
      - basic_auth: []
  /individuals/{id}: 
    get: 
      tags:
        - Individuals
      summary: Indvidual
      description: Recive individual by id saved in the database.
      parameters:
      - in: path
        name: id
        description: Individual objectId
        example: 620a2958bfc1d7a803398a6d
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
               $ref: "#/components/schemas/individual"
        400:
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidBody"
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorBody"
      security:
      - basic_auth: []
    put:
      tags:
      - Individuals
      summary: Update individual
      parameters:
      - in: path
        name: id
        description: Individual objectId
        example: 620a2958bfc1d7a803398a6d
        required: true
        schema:
          type: string
      description: Create a new individual.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - customId
              properties:
                    customId:
                      type: string
                      description: The custom id can be any id that the creater would like to identify the individual with.
                    firstName:
                      type: string
                    lastName:
                      type: string
                    swedishSocialSecurityNumber:
                      type: string
                      format: YYYYMMDDXXXX
                    status:
                      type: string
                      enum:
                      - Avilable
                      - Blocked
                
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/individual"
        400:
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidBody"
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorBody"
      security:
      - basic_auth: []
  /businesses/: 
    get: 
      tags:
        - Businesses
      summary: List businesses
      description: Recive list of businesses saved in the database.
      parameters:
      - in: query
        name: _sort
        required: false
        example: 'id'
        schema:
          type: string
          enum:
          - id
          - name
          - swedishOrganisationNumber
          - riskScore
      - in: query
        name: _order
        description: Order of list (DESC or ASC) based on the sorting parameter.
        required: false
        example: 
        schema:
          type: string
          enum:
          - DESC
          - ASC
      - in: query
        name: _start
        description: The start number of the businesses list.
        required: false
        example: '0'
        schema:
          type: number
      - in: query
        name: _end
        description: The end number of the businesses list.
        required: false
        example: '10'
        schema:
          type: number
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/business"
        400:
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidBody"
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorBody"
      security:
      - basic_auth: []
    post:
      tags:
      - Businesses
      summary: Create business
      description: Create a new business.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - customId
              properties:
                    customId:
                      type: string
                      description: The custom id can be any id that the creater would like to identify the business with.
                    name:
                      type: string
                    swedishOrganisationNumber:
                      type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/business"
        400:
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidBody"
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorBody"
      security:
      - basic_auth: []
  /businesses/{id}: 
    get: 
      tags:
        - Businesses
      summary: Business
      description: Recive business by id saved in the database.
      parameters:
      - in: path
        name: id
        description: Business objectId
        example: 620a2958bfc1d7a803398a6d
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
               $ref: "#/components/schemas/business"
        400:
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidBody"
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorBody"
      security:
      - basic_auth: []
    put:
      tags:
      - Businesses
      summary: Update businesses
      parameters:
      - in: path
        name: id
        description: Business objectId
        example: 620a2958bfc1d7a803398a6d
        required: true
        schema:
          type: string
      description: Create a new businesses.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - customId
              properties:
                    customId:
                      type: string
                      description: The custom id can be any id that the creater would like to identify the business with.
                    name:
                      type: string
                    swedishOrganisationNumber:
                      type: string
                    status:
                      type: string
                      enum:
                      - Avilable
                      - Blocked
                
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/business"
        400:
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidBody"
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorBody"
      security:
      - basic_auth: []
components:
  schemas:
    individual:
     type: object
     properties:
      id:
        type: string
      customId:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      swedishSocialSecurityNumber:
        type: string
      riskScore:
        type: integer
        minimum: 1
        maximum: 10
      pep:
        type: string
        enum: 
        - Yes
        - No 
      sanctionList:
        type: string
        enum: 
        - Avilable
        - None 
      spar:
        type: boolean
      kycOnboarding:
        description: Date, iso 8601 format
        type: string
      kycLatestRequest:
        description: Date, iso 8601 format
        type: string
      transactions:
        description: Date, iso 8601 format
        type: string
      status: 
        type: string
        enum: 
        - Avilable
        - Blocked 
      relatedCompanies: 
        type: array
        items: 
          type: object
          properties: 
            name:
              type: string
            companyId:
              type: string
            id:
              type: string
            roles:
              type: array
              items: 
                type: string
    business:
     type: object
     properties:
      id:
        type: string
      customId:
        type: string
      name:
        type: string
      swedishOrganisationNumber:
        type: string
      riskScore:
        type: integer
        minimum: 1
        maximum: 10
      kycOnboarding:
        description: Date, iso 8601 format
        type: string
      kycLatestRequest:
        description: Date, iso 8601 format
        type: string
      transactions:
        description: Date, iso 8601 format
        type: string
      status: 
        type: string
        enum: 
        - Avilable
        - Blocked 
      relatedIndividuals: 
        type: array
        items: 
          type: object
          properties: 
            name:
              type: string
            id:
              type: string
            relation:
              type: array
              items: 
                type: string
    invalidBody:
      type: object
      required:
      - status
      - message
      properties:
        status:
          type: integer
          description: HTTP status code
          example: 400
        message:
          type: string
          description: Main error reason
        errors:
          type: array
          items:
            type: string
            description: Optional list of errors
            example: applicant.0.phone is a required field and must be a valid phone number in swedish or international format
    errorBody:
      type: object
      required:
      - status
      - message
      properties:
        status:
          type: integer
          description: HTTP status code
          example: 500
        message:
          type: string
          description: Main error reason

  securitySchemes:
    basic_auth:
      type: "http"
      scheme: "basic"
